AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template for Cognito & SES Email Identity

Parameters:
  LegDragonsCognitoFromEmail:
    Type: String
    Default: "no-reply@legendarydragons.cloud-native-minor.it"

Resources:
  LegDragonsEmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: legendarydragons.cloud-native-minor.it
      DkimAttributes:
        SigningEnabled: true
      DkimSigningAttributes:
        NextSigningKeyLength: "RSA_2048_BIT"

  LegDragonsCognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: "LegendaryDragonsCognitoUserPool"
      Policies:
        PasswordPolicy:
          MinimumLength: 10
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: true
        - AttributeDataType: String
          Name: nickname
          Mutable: true
          Required: true
          StringAttributeConstraints:
            MinLength: "3"
            MaxLength: "75"
      EmailConfiguration:
        EmailSendingAccount: DEVELOPER
        From: !Ref LegDragonsCognitoFromEmail
        SourceArn: arn:aws:ses:us-east-1:861259332787:identity/legendarydragons.cloud-native-minor.it
      VerificationMessageTemplate:
        DefaultEmailOption: CONFIRM_WITH_LINK
        EmailSubjectByLink: "Account verification Legendary Dragons"
        EmailMessageByLink: "<h1>Legendary Dragons</h1> Thank you for registering! {##Click me##} to verify your emails address and to be able to start using the app."

  CognitoDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      CustomDomainConfig:
        CertificateArn: arn:aws:acm:us-east-1:861259332787:certificate/992c61a9-772d-4e2a-b0d1-cbe4605b3510
      Domain: "auth.legendarydragons.cloud-native-minor.it"
      UserPoolId: !Ref LegDragonsCognitoUserPool

  LegDragonsUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_CUSTOM_AUTH
      UserPoolId: !Ref LegDragonsCognitoUserPool
      GenerateSecret: false

Outputs:
  LegDragonsUserPoolClient:
    Description: "Legendary Dragons User Pool Client ID"
    Value: !Ref LegDragonsUserPoolClient
    Export:
      Name: !Sub "${AWS::StackName}-LegDragonUserPoolClient"
