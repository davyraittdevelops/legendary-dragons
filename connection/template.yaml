AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  connection

  Sample SAM Template for connection

Parameters:   
  LegDragonsWebSocketApi:     
    Type: String     
    Default: "legendary-dragons-ws-api-gateway-LegDragonsWebSocketApi"

Globals:
  Function:
    Timeout: 3
    Tracing: Active
    Handler: app.lambda_handler
    Runtime: python3.9
    Architectures:
      - x86_64
  Api:
    TracingEnabled: True

Resources:
  onconnectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/onconnect
      Policies: 
        - DynamoDBWritePolicy:
            TableName: !Ref connectionsDynamoDBTable
  onconnectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref onconnectFunction
      Principal: apigateway.amazonaws.com
  connectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: 
        Fn::ImportValue:
          !Sub "${LegDragonsWebSocketApi}"
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: connectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref connectInteg
  connectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: 
        Fn::ImportValue:
          !Sub "${LegDragonsWebSocketApi}"
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${onconnectFunction.Arn}/invocations

  disconnectFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/disconnect
      Policies: 
        - DynamoDBCrudPolicy:
            TableName: !Ref connectionsDynamoDBTable
  disconnectPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref disconnectFunction
      Principal: apigateway.amazonaws.com
  disconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: 
        Fn::ImportValue:
          !Sub "${LegDragonsWebSocketApi}"
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: disconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref disconnectInteg
  disconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: 
        Fn::ImportValue:
          !Sub "${LegDragonsWebSocketApi}"
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: 
        Fn::Sub:
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${disconnectFunction.Arn}/invocations

  connectionsDynamoDBTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    Properties:
      TableName: connections
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST